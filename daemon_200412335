#!/bin/bash
 
### BEGIN INIT INFO
# Provides:          daemon_200412335
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Daemon con fines Educativos - 200412335
### END INIT INFO
 
# Source LSB helpers
. /lib/lsb/init-functions
 
# Process name (for display only)
NAME=daemon_200412335
 
# Where is the actual executable for the daemon
DAEMON="/home/juanmarcos/daemon_200412335/daemon_200412335.py"
DAEMON_ARGS="/home/juanmarcos/daemon_200412335/daemon_200412335.ini"
 
# The user:group under which the daemon must run
RUN_AS_USER=juanmarcos
 
# pid file for the daemon
PIDFILE=/var/run/daemon_200412335.pid
 
# If the daemon is not there, then exit.
if ! [ -x ${DAEMON} ] ; then
    log_failure_msg "No se puede encontrar ejecutable en ${DAEMON}"
    exit 1
fi
 
case $1 in
    start)
        # Check if pidfile exists
        if [ -e ${PIDFILE} ]; then
            # Check the actual status of process
            status_of_proc -p ${PIDFILE} ${DAEMON} ${NAME} && status="0" || status="$?"
            # If the status is successfull, no need to start again.
            [ ${status} = "0" ] && exit 0
        fi
        # Start the daemon.
        log_daemon_msg "Iniciando ${NAME}" 
        # Start the daemon with the help of start-stop-daemon
        start-stop-daemon -S --quiet --oknodo --pidfile ${PIDFILE} --make-pidfile --background \
            --chuid ${RUN_AS_USER} --startas ${DAEMON} -- ${DAEMON_ARGS}
        if [ "$?" == "0" ]; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;
    stop)
        if [ -e ${PIDFILE} ]; then
            status_of_proc -p ${PIDFILE} ${DAEMON} ${NAME} && status="0" || status="$?"
            if [ "$status" = "0" ]; then
                log_daemon_msg "Deteniedo ${NAME}" 
                start-stop-daemon -K --signal TERM --quiet --oknodo --pidfile ${PIDFILE}
                if [ "$?" == "0" ]; then
                    log_end_msg 0
                    rm -rf ${PIDFILE}
                else
                    log_end_msg 1
                fi
            fi
        else
            log_daemon_msg "${NAME} no esta Corriendo"
            log_end_msg 0
        fi
        ;;
    restart)
        $0 stop && sleep 3 && $0 start
        ;;
    status)
        # Check the status of the process.
        if [ -e ${PIDFILE} ]; then
            status_of_proc -p ${PIDFILE} ${DAEMON} ${NAME} && exit 0 || exit $?
        else
            log_daemon_msg "${NAME} No esta Corriendo (no hay archivo pid)"
            log_end_msg 0
        fi
        ;;
    reload)
        if [ -e ${PIDFILE} ]; then
            log_daemon_msg "Recargando ${NAME}" 
            start-stop-daemon -K --quiet --signal HUP --pidfile ${PIDFILE}
            if [ "$?" == "0" ]; then
                log_end_msg 0
            else
                log_end_msg 1
            fi
        else
            log_failure_msg "No se puede encontrar archivo pid en ${PIDFILE}"
        fi
        ;;
    *)
        # Invalid argument, print the usage message.
        echo "Para uso: $0 {start|stop|restart|reload|status}"
        exit 2
        ;;
esac
